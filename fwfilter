BEGIN

internal ( c_f1 c_f2 c_f1_p c_f2_p )

cli:
l1c while true do
  l2c recv(c_usr,h1_cli,pl1_cli);
  l3c send(c_f1,h1_cli,pl1_cli);
  l4c recv(c_f1_p,h2_cli,pl2_cli);
  l5c send(c_usr_p,h2_cli,pl2_cli) 
od

||

fil:
l1f while true do
  l2f recv(c_f1,h1_fil,pl1_fil);
  l3f if h1_fil = (s_fil + 1) % 6
    then l4f s_fil := h1_fil; 
    	  l5f send(c_f2,h1_fil,pl1_fil) 
    else l6f send(c_au,h1_fil,pl1_fil) 
  fi;
  l7f recv(c_f2_p,h2_fil,pl2_fil);
  l8f if h2_fil = (s_fil + 1) % 6 
     then l9f s_fil := h2_fil; 
     	    l10f send(c_f1_p,h2_fil,pl2_fil)
     else l11f send(c_au,h2_fil,pl2_fil) 
  fi
od

||

srv:
l1s while true do 
  l2s recv(c_f2,h1_srv,pl1_srv);
  l3s send(c_app_p,h1_srv,pl1_srv);
  l4s recv(c_app,h2_srv,pl2_srv);
  l5s send(c_f2_p,h2_srv,pl2_srv) 
od
  
END

BEGIN invariants
l1c -> (??~l1c : true), (tt~l1c : true); 
l1f -> (??~l1f,??~l3f,??~l8f : s_fil=h2_fil), (tt~l1f,tt~l3f,tt~l8f : s_fil=h2_fil),
      (tt~l1f,ff~l3f,tt~l8f : s_fil=h2_fil), (tt~l1f,tt~l3f,ff~l8f : true),
			(tt~l1f,ff~l3f,ff~l8f : true); 
l1s -> (??~l1s : true), (tt~l1s : true) 
END invariants

BEGIN assertions
l7 -> (tt~l1f,??~l3f,??~l8f : s_fil=h2_fil), (tt~l1f,tt~l3f,tt~l8f : s_fil=h2_fil),
      (tt~l1f,tt~l3f,ff~l8f : true), (tt~l1f,ff~l3f,tt~l8f : s_fil=h2_fil), 
			(tt~l1f,ff~l3f,ff~l8f : true); 
l12 -> (tt~l1f,tt~l3f,??~l8f : s_fil=h1_fil), (tt~l1f,tt~l3f,tt~l8f : s_fil=h1_fil), 
       (tt~l1f,tt~l3f,ff~l8f : s_fil=h1_fil), (tt~l1f,ff~l3f,??~l8f : true),
			 (tt~l1f,ff~l3f,tt~l8f : true), (tt~l1f,ff~l3f,ff~l8f : true)
END assertions

BEGIN policies

principals ( cli srv au )

c_usr.2 -> (c_usr.1 = (h2_srv@srv + 1) % 6 ==> {srv}) /\
                  (c_usr.1 != (h2_srv@srv + 1) % 6 ==> {au})
pl1_cli -> (h1_cli = (h2_srv@srv + 1) % 6 ==> {srv}) /\
                (h1_cli != (h2_srv@srv + 1) % 6 ==> {au})  
c_f1.2 -> (c_f1.1 = (h2_srv@srv + 1) % 6 ==> {srv}) /\
                 (c_f1.1 != (h2_srv@srv + 1) % 6 ==> {au}) 
pl1_fil -> (h1_fil = (s_fil + 1) % 6 ==> {srv}) /\ 
               (h1_fil != (s_fil + 1) % 6 ==> {au})
c_f2.2 -> (true ==> {srv}) 
pl1_srv -> (true ==> {srv})
c_app_p.2 -> (true ==> {})

c_app.2 -> (c_app.1 = (h1_cli@cli + 1) % 6 ==> {cli}) /\
                   (c_app.1 != (h1_cli@cli + 1) % 6 ==> {au})
pl2_srv -> (h2_srv = (h1_cli@cli + 1) % 6 ==> {cli}) /\
                   (h2_srv != (h1_cli@cli + 1) % 6 ==> {au})
c_f2_p.2 -> (c_f2_p.1 = (h1_cli@cli + 1) % 6 ==> {cli}) /\
                    (c_f2_p.1 != (h1_cli@cli + 1) % 6 ==> {au})
pl2_fil -> (h2_fil = (s_fil + 1) % 6 ==> {cli}) /\
                 (h2_fil != (s_fil + 1) % 6 ==> {au})  
c_f1_p.2 -> (true ==> {cli})
pl2_cli -> (true ==> {cli})
c_usr_p.2 -> (true ==> {})

c_au.2 -> (true ==> {au})

END policies

